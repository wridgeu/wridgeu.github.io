{"version":3,"file":"markdownService-dbg.js","names":["Marked","__marked","markedHighlight","__marked_highlight","hljs","_interopRequireDefault","__hljs","js","__js","xml","__xml","css","__css","shell","__shell","bash","__bash","json","__json","registerLanguage","marked","highlight","code","lang","getLanguage","language","value","renderer","paragraph","text","regEx","match","image","trim","substring","length","imagePath","use","__exports","__esModule","markdownService"],"sources":["markdownService.ts"],"sourcesContent":["import { Marked } from \"marked\";\nimport { markedHighlight } from \"marked-highlight\";\nimport hljs from \"highlight.js/lib/core\";\nimport js from \"highlight.js/lib/languages/javascript\";\nimport xml from \"highlight.js/lib/languages/xml\";\nimport css from \"highlight.js/lib/languages/css\";\nimport shell from \"highlight.js/lib/languages/shell\";\nimport bash from \"highlight.js/lib/languages/bash\";\nimport json from \"highlight.js/lib/languages/json\";\n\n// Prevent Rollup \"Unexpected token Error\", some tokens within certain language definitions (i.e. arduino) throw rollup off\n// Err: \"rollup-plugin-inject: failed to parse '<path-to-file.js>' Consider restricting the plugin to particular files via options.include\"\nhljs.registerLanguage(\"javascript\", js);\nhljs.registerLanguage(\"xml\", xml);\nhljs.registerLanguage(\"css\", css);\nhljs.registerLanguage(\"shell\", shell);\nhljs.registerLanguage(\"bash\", bash);\nhljs.registerLanguage(\"json\", json);\n\nconst marked = new Marked(\n\tmarkedHighlight({\n\t\thighlight(code, lang) {\n\t\t\tif (lang && hljs.getLanguage(lang)) {\n\t\t\t\treturn hljs.highlight(code, { language: lang }).value;\n\t\t\t}\n\t\t},\n\t})\n);\n\n/**\n * Image Rendering\n * @returns {HTMLImageElement|string} Dynamic image HTML-Tag\n */\nconst renderer = {\n\tparagraph(text: string) {\n\t\t// transform <p>-tags that match the regex to <img>-tags\n\t\tconst regEx = /\\[\\[.+?\\.(?:jpg|gif|png)\\]\\]/g;\n\t\t// doesn't match our [[<something>.jpg]]-pattern\n\t\tif (!text.match(regEx)) return false;\n\t\t// remove whitespace (edge case) && remove '[[' and ']]'\n\t\tconst image = text.trim() && text.substring(2, text.length - 2);\n\t\t// rebuild image path for raw github\n\t\tconst imagePath = `https://raw.githubusercontent.com/wiki/wridgeu/wridgeu.github.io/${image}`;\n\n\t\treturn `<img class=\"wikiImage\" src=\"${imagePath}\"></img>`;\n\t},\n};\n\nmarked.use({ renderer });\n\n/**\n * @namespace sapmarco.projectpages.util\n */\nexport { marked as markdownService };\n"],"mappings":";;;;;;;;QAASA,MAAM,GAAAC,QAAA;EAAA,MACNC,eAAe,GAAAC,kBAAA;EAAA,MACjBC,IAAI,GAAAC,sBAAA,CAAAC,MAAA;EAAA,MACJC,EAAE,GAAAF,sBAAA,CAAAG,IAAA;EAAA,MACFC,GAAG,GAAAJ,sBAAA,CAAAK,KAAA;EAAA,MACHC,GAAG,GAAAN,sBAAA,CAAAO,KAAA;EAAA,MACHC,KAAK,GAAAR,sBAAA,CAAAS,OAAA;EAAA,MACLC,IAAI,GAAAV,sBAAA,CAAAW,MAAA;EAAA,MACJC,IAAI,GAAAZ,sBAAA,CAAAa,MAAA,GAEX;EACA;EACAd,IAAI,CAACe,gBAAgB,CAAC,YAAY,EAAEZ,EAAE,CAAC;EACvCH,IAAI,CAACe,gBAAgB,CAAC,KAAK,EAAEV,GAAG,CAAC;EACjCL,IAAI,CAACe,gBAAgB,CAAC,KAAK,EAAER,GAAG,CAAC;EACjCP,IAAI,CAACe,gBAAgB,CAAC,OAAO,EAAEN,KAAK,CAAC;EACrCT,IAAI,CAACe,gBAAgB,CAAC,MAAM,EAAEJ,IAAI,CAAC;EACnCX,IAAI,CAACe,gBAAgB,CAAC,MAAM,EAAEF,IAAI,CAAC;EAEnC,MAAMG,MAAM,GAAG,IAAIpB,MAAM,CACxBE,eAAe,CAAC;IACfmB,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAE;MACrB,IAAIA,IAAI,IAAInB,IAAI,CAACoB,WAAW,CAACD,IAAI,CAAC,EAAE;QACnC,OAAOnB,IAAI,CAACiB,SAAS,CAACC,IAAI,EAAE;UAAEG,QAAQ,EAAEF;QAAK,CAAC,CAAC,CAACG,KAAK;MACtD;IACD;EACD,CAAC,CACF,CAAC;;EAED;AACA;AACA;AACA;EACA,MAAMC,QAAQ,GAAG;IAChBC,SAASA,CAACC,IAAY,EAAE;MACvB;MACA,MAAMC,KAAK,GAAG,+BAA+B;MAC7C;MACA,IAAI,CAACD,IAAI,CAACE,KAAK,CAACD,KAAK,CAAC,EAAE,OAAO,KAAK;MACpC;MACA,MAAME,KAAK,GAAGH,IAAI,CAACI,IAAI,CAAC,CAAC,IAAIJ,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEL,IAAI,CAACM,MAAM,GAAG,CAAC,CAAC;MAC/D;MACA,MAAMC,SAAS,GAAI,oEAAmEJ,KAAM,EAAC;MAE7F,OAAQ,+BAA8BI,SAAU,UAAS;IAC1D;EACD,CAAC;EAEDhB,MAAM,CAACiB,GAAG,CAAC;IAAEV;EAAS,CAAC,CAAC;;EAExB;AACA;AACA;EAFA,IAAAW,SAAA;IAAAC,UAAA;EAAA;EAAAD,SAAA,CAGmBE,eAAe,GAAApB,MAAA;EAAA,OAAAkB,SAAA;AAAA"}