{"version":3,"file":"markdownService.js","names":["hljs","js","xml","css","shell","bash","json","marked","registerLanguage","setOptions","highlight","string","lang","getLanguage","language","value","renderer","paragraph","text","regEx","match","image","trim","substring","length","imagePath","use","markdownService"],"sources":["markdownService.ts"],"sourcesContent":["import hljs from \"highlight.js/lib/core\";\nimport js from \"highlight.js/lib/languages/javascript\";\nimport xml from \"highlight.js/lib/languages/xml\";\nimport css from \"highlight.js/lib/languages/css\";\nimport shell from \"highlight.js/lib/languages/shell\";\nimport bash from \"highlight.js/lib/languages/bash\";\nimport json from \"highlight.js/lib/languages/json\";\nimport { marked } from \"marked\";\n\n// Prevent Rollup \"Unexpected token Error\", some tokens within certain language definitions (i.e. arduino) throw rollup off\n// Err: \"rollup-plugin-inject: failed to parse '<path-to-file.js>' Consider restricting the plugin to particular files via options.include\"\nhljs.registerLanguage(\"javascript\", js);\nhljs.registerLanguage(\"xml\", xml);\nhljs.registerLanguage(\"css\", css);\nhljs.registerLanguage(\"shell\", shell);\nhljs.registerLanguage(\"bash\", bash);\nhljs.registerLanguage(\"json\", json);\n\n/**\n * Syntax Highlighting\n * @returns {string} highlighted code block\n */\nmarked.setOptions({\n\thighlight: function(string: string, lang?: string): string | void {\n\t\tif (lang && hljs.getLanguage(lang)) {\n\t\t\treturn hljs.highlight(string, { language: lang }).value;\n\t\t}\n\t}\n});\n\n/**\n * Image Rendering\n * @returns {HTMLImageElement|string} Dynamic image HTML-Tag\n */\nconst renderer = {\n\tparagraph(text: string) {\n\t\t// transform <p>-tags that match the regex to <img>-tags\n\t\tconst regEx = /\\[\\[.+?\\.(?:jpg|gif|png)\\]\\]/g;\n\t\t// doesn't match our [[<something>.jpg]]-pattern\n\t\tif (!text.match(regEx)) return false;\n\t\t// remove whitespace (edge case) && remove '[[' and ']]'\n\t\tconst image = text.trim() && text.substring(2, text.length - 2);\n\t\t// rebuild image path for raw github\n\t\tconst imagePath = `https://raw.githubusercontent.com/wiki/wridgeu/wridgeu.github.io/${image}`;\n\n\t\treturn `<img class=\"wikiImage\" src=\"${imagePath}\"></img>`;\n\t}\n};\n\nmarked.use({ renderer });\n\n/**\n * @namespace sapmarco.projectpages.util\n */\nexport { marked as markdownService };\n"],"mappings":";;;;QAAOA,IAAI;EAAA,MACJC,EAAE;EAAA,MACFC,GAAG;EAAA,MACHC,GAAG;EAAA,MACHC,KAAK;EAAA,MACLC,IAAI;EAAA,MACJC,IAAI;EAAA,MACFC,MAAM,uBAEf;EACA;EACAP,IAAI,CAACQ,gBAAgB,CAAC,YAAY,EAAEP,EAAE,CAAC;EACvCD,IAAI,CAACQ,gBAAgB,CAAC,KAAK,EAAEN,GAAG,CAAC;EACjCF,IAAI,CAACQ,gBAAgB,CAAC,KAAK,EAAEL,GAAG,CAAC;EACjCH,IAAI,CAACQ,gBAAgB,CAAC,OAAO,EAAEJ,KAAK,CAAC;EACrCJ,IAAI,CAACQ,gBAAgB,CAAC,MAAM,EAAEH,IAAI,CAAC;EACnCL,IAAI,CAACQ,gBAAgB,CAAC,MAAM,EAAEF,IAAI,CAAC;;EAEnC;AACA;AACA;AACA;EACAC,MAAM,CAACE,UAAU,CAAC;IACjBC,SAAS,EAAE,UAASC,MAAc,EAAEC,IAAa,EAAiB;MACjE,IAAIA,IAAI,IAAIZ,IAAI,CAACa,WAAW,CAACD,IAAI,CAAC,EAAE;QACnC,OAAOZ,IAAI,CAACU,SAAS,CAACC,MAAM,EAAE;UAAEG,QAAQ,EAAEF;QAAK,CAAC,CAAC,CAACG,KAAK;MACxD;IACD;EACD,CAAC,CAAC;;EAEF;AACA;AACA;AACA;EACA,MAAMC,QAAQ,GAAG;IAChBC,SAAS,CAACC,IAAY,EAAE;MACvB;MACA,MAAMC,KAAK,GAAG,+BAA+B;MAC7C;MACA,IAAI,CAACD,IAAI,CAACE,KAAK,CAACD,KAAK,CAAC,EAAE,OAAO,KAAK;MACpC;MACA,MAAME,KAAK,GAAGH,IAAI,CAACI,IAAI,EAAE,IAAIJ,IAAI,CAACK,SAAS,CAAC,CAAC,EAAEL,IAAI,CAACM,MAAM,GAAG,CAAC,CAAC;MAC/D;MACA,MAAMC,SAAS,GAAI,oEAAmEJ,KAAM,EAAC;MAE7F,OAAQ,+BAA8BI,SAAU,UAAS;IAC1D;EACD,CAAC;EAEDlB,MAAM,CAACmB,GAAG,CAAC;IAAEV;EAAS,CAAC,CAAC;;EAExB;AACA;AACA;EAFA;IAAA;EAAA;EAAA,UAGmBW,eAAe;EAAA;AAAA"}