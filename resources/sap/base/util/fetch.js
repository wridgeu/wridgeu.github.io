/*!
 * OpenUI5
 * (c) Copyright 2009-2022 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
sap.ui.define([],function(){"use strict";function e(e){var t=new Headers;e.trim().split("\r\n").forEach(function(e){if(e){var r=e.indexOf(": ");if(r>0){t.append(e.slice(0,r),e.slice(r+2))}else{t.append(e,"")}}});return t}function t(t,r){this.xhr=t;var s=e(this.xhr.getAllResponseHeaders());Object.defineProperties(this,{headers:{value:s},ok:{value:this.xhr.status>=200&&this.xhr.status<300},status:{value:this.xhr.status},statusText:{value:this.xhr.statusText}});this.json=function(){if(this.xhr.responseType==="json"){return r.resolve(this.xhr.response)}else{try{var e=JSON.parse(this.xhr.responseText);return r.resolve(e)}catch(e){return r.reject(e)}}};this.text=function(){return r.resolve(this.xhr.responseText)}}var r=["include","omit","same-origin"];function s(e,s,n){s=Object.assign({body:null,credentials:"same-origin",method:"GET",signal:(new AbortController).signal},s);var i=n&&n.promiseImpl||Promise;return new i(function(a,o){var l=new URL(e,document.baseURI);if(l.username||l.password){o(new TypeError("Failed to execute 'fetch': Request cannot be constructed from a URL that includes credentials:"+e))}if(s.body!==null&&(s.method=="GET"||s.method=="HEAD")){o(new TypeError("Failed to execute 'fetch': Request with GET/HEAD method cannot have body."))}var d=new XMLHttpRequest;d.addEventListener("load",function(){var e=new t(d,i);if(n&&n.responseMixin){n.responseMixin.apply(e)}a(e)});d.addEventListener("error",function(){o(new TypeError("Failed to fetch."))});d.open(s.method,e,n?false:true);s.signal.addEventListener("abort",function(){d.abort();o(new DOMException("The user aborted a request.","AbortError"))});var u;if(s.headers instanceof Headers){u=Object.fromEntries(s.headers)}else{u=s.headers||{}}Object.keys(u).forEach(function(e){d.setRequestHeader(e,u[e])});if(r.includes(s.credentials)){if(s.credentials==="omit"){d.withCredentials=false}else if(s.credentials==="include"){d.withCredentials=true}}else{o(new TypeError("Failed to execute 'fetch': Failed to read the 'credentials' property from 'RequestInit': The provided value "+s.credentials+" is not a valid enum value of type RequestCredentials."))}try{d.send(s.body)}catch(e){o(new TypeError(e.message))}})}s.ContentTypes={TEXT:"text/plain",HTML:"text/html",XML:"application/xml, text/xml",JSON:"application/json, text/javascript"};return s});